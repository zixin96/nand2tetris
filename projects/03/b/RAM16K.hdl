// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    // Put your code here:
	RAM4K(in=in ,load=load1 ,address=address[0..11] ,out=RAM1out );
	RAM4K(in=in ,load=load2 ,address=address[0..11] ,out=RAM2out );
	RAM4K(in=in ,load=load3 ,address=address[0..11] ,out=RAM3out );
	RAM4K(in=in ,load=load4 ,address=address[0..11] ,out=RAM4out );

	Mux4Way16(a=RAM1out ,b=RAM2out ,c=RAM3out ,d=RAM4out ,sel=address[12..13] ,out=out );
	
	DMux4Way(in=true ,sel=address[12..13] ,a=RAM1 ,b=RAM2 ,c=RAM3 ,d=RAM4 );

	Mux(a=false ,b=load ,sel=RAM1 ,out=load1 );
	Mux(a=false ,b=load ,sel=RAM2 ,out=load2 );
	Mux(a=false ,b=load ,sel=RAM3 ,out=load3 );
	Mux(a=false ,b=load ,sel=RAM4 ,out=load4 );
}