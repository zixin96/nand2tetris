// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load=load=1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Put your code here:
	// registers
	Register(in=in ,load=load1 ,out=r1out );
	Register(in=in ,load=load2 ,out=r2out );
	Register(in=in ,load=load3 ,out=r3out );
	Register(in=in ,load=load4 ,out=r4out );

	Register(in=in ,load=load5 ,out=r5out );
	Register(in=in ,load=load6 ,out=r6out );
	Register(in=in ,load=load7 ,out=r7out );
	Register(in=in ,load=load8 ,out=r8out );
	// read
	Mux8Way16(a=r1out ,b=r2out ,c=r3out ,d=r4out ,e=r5out ,f=r6out ,g=r7out ,h=r8out ,sel=address ,out=out );

	// write
	DMux8Way(in=true ,sel=address ,a=r1 ,b=r2 ,c=r3 ,d=r4 ,e=r5 ,f=r6 ,g=r7 ,h=r8 );
	
	Mux(a=false ,b=load ,sel=r1 ,out=load1 );
	Mux(a=false ,b=load ,sel=r2 ,out=load2 );
	Mux(a=false ,b=load ,sel=r3 ,out=load3 );
	Mux(a=false ,b=load ,sel=r4 ,out=load4 );

	Mux(a=false ,b=load ,sel=r5 ,out=load5 );
	Mux(a=false ,b=load ,sel=r6 ,out=load6 );
	Mux(a=false ,b=load ,sel=r7 ,out=load7 );
	Mux(a=false ,b=load ,sel=r8 ,out=load8 );
}